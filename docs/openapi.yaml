openapi: 3.0.3
info:
  title: Orders APIs
  description: |-
    This is a POC of orders Restful APIs
  contact:
    email: anthonyjohngarcia9@gmail.com
  version: "0.1"
servers:
  - url: http://localhost:8080
tags:
  - name: Customers
    description: Customer APIs
  - name: Orders
    description: Orders APIs
  - name: Order Items
    description: Order Items APIs
  - name: Products
    description: Products APIs
paths:
  /api/auth/register:
    post:
      tags:
        - Customers
      summary: Create a customer record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/auth/login:
    post:
      tags:
        - Customers
      summary: Customer login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLogin'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerLoginResponse'
  /api/customers:
    put:
      tags:
        - Customers
      summary: Update customer's own info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - bearerAuth: []
    get:
      tags:
        - Customers
      summary: Get customer's own info
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Customers
      summary: Delete account
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
      security:
        - bearerAuth: []

  /api/orders:
    post:
      tags:
        - Orders
      summary: Create an order record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
        - bearerAuth: []
    get:
      tags:
        - Orders
      summary:  Get all order records
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
          required: false
        - name: limit
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseWithPagination'
      security:
        - bearerAuth: []
  /api/orders/{id}:
    put:
      tags:
        - Orders
      summary: Update an order record
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
        - bearerAuth: []
    get:
      tags:
        - Orders
      summary: Get an order by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Orders
      summary: Delete an order by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
      security:
        - bearerAuth: []

  /api/order-items:
    post:
      tags:
        - Order Items
      summary: Create an order item record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItems'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItems'
      security:
        - bearerAuth: []
    get:
      tags:
        - Order Items
      summary:  Get all order item records
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
          required: false
        - name: limit
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItemsResponseWithPagination'
      security:
        - bearerAuth: []
  /api/order-items/{id}:
    put:
      tags:
        - Order Items
      summary: Update an order item record
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItems'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItems'
      security:
        - bearerAuth: []
    get:
      tags:
        - Order Items
      summary: Get an order item by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItems'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Order Items
      summary: Delete an order item by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
      security:
        - bearerAuth: []
                    
  /api/products:
    post:
      tags:
        - Products
      summary: Create a product record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - bearerAuth: []
    get:
      tags:
        - Products
      summary:  Get all product records
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
          required: false
        - name: limit
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseWithPagination'
      security:
        - bearerAuth: []
  /api/products/{id}:
    put:
      tags:
        - Products
      summary: Update an product record
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - bearerAuth: []
    get:
      tags:
        - Products
      summary: Get an product by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Products
      summary: Delete an product by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
      security:
      - bearerAuth: []
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        name:
          type: string
          example: "Ben Kinsley"
        email:
          type: string
          example: "bkinsley@email.com"
        password:
          type: string
          example: "***********"
          writeOnly: true
        address:
          type: string
          example: "34 Mckennon Avenue"
        contactNumber:
          type: string
          example: "+6583663941"
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CustomerLogin:
      type: object
      properties:
        email:
          type: string
          example: "bkinsley@email.com"
        password:
          type: string
          example: "***********"
          writeOnly: true
    CustomerLoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzM4N3J9.eyJzdWIiOiJ0ZXN0QGVtYqlsLmNvbSIsImlhdCI6MTczMDI5MDUxMiwiZXhwIjoxNzMwMjk0MTEyfQ.TJbHQ1aC5FzZIwj3yvsz5MnpEDSb4opqyrqoelzC2ZlkxaYA8fV_ytGHEPpf1cm8"
        expiresIn:
          type: integer
          example: 3600000
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        customerId:
          type: integer
          example: 1
          required: true
          readOnly: true
        orderedAt:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          example: "Processing"
        totalAmount:
          type: number
          format: float
          example: 10.00
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    OrderItems:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        orderId:
          type: integer
          example: 1
          required: true
        productId:
          type: integer
          example: 1
          required: true
        quantity:
          type: integer
          example: 3
          required: true
        unitPrice:
          type: number
          format: float
          example: 3.00
        subtotal:
          type: number
          format: float
          example: 3.00
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        upc:
          type: string
          example: "012345678905"
        name:
          type: string
          example: "Two Door Cabinet (Grey)"
        description:
          type: string
          example: "Cabinet with doors, grey, 78x95 cm"
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Pagination:
      type: object
      properties:
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 1
        numOfItems:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 1
        totalItems:
          type: integer
          example: 1
    OrderResponseWithPagination:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        pagination:
          $ref: '#/components/schemas/Pagination'
    OrderItemsResponseWithPagination:
      type: object
      properties:
        ordersItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItems'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ProductResponseWithPagination:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        pagination:
          $ref: '#/components/schemas/Pagination'
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
